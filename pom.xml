<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.yy.framework</groupId>
    <artifactId>yy-framework</artifactId>
<!--    这个版本执行mvn deploy上传到私服时，所有的包会怎么带上时间戳-->
    <version>1.0.0-SNAPSHOT</version>
<!--    <version>1.0.0-RELEASE</version>-->
    <packaging>pom</packaging>
    <name>yy-framework</name>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <java.version>1.8</java.version>

        <commons.lang.version>2.6</commons.lang.version>
        <commons.beanutils.version>1.9.2</commons.beanutils.version>
        <commons.collections.version>3.2.2</commons.collections.version>
        <commons.codec.version>1.11</commons.codec.version>

        <slf4j.version>1.7.24</slf4j.version>

        <spring.version>5.1.8.RELEASE</spring.version>
        <!-- 		<spring.data.jpa.version>1.9.4.RELEASE</spring.data.jpa.version> -->
        <hibernate.jpa.version>1.0.0.Final</hibernate.jpa.version>
        <hibernate.version>5.0.11.Final</hibernate.version>

        <fastjson.version>1.2.58</fastjson.version>
        <jackson.version>2.9.0</jackson.version>

        <httpclient.version>4.5.2</httpclient.version>
        <poi.version>3.9</poi.version>
        <dom4j.version>1.6.1</dom4j.version>
        <jaxen.version>1.1.6</jaxen.version>

        <swagger.version>2.7.0</swagger.version>
        <swagger.annotations.version>1.5.13</swagger.annotations.version>

        <servlet.version>2.5</servlet.version>

<!--        解决jdk1.8打包报错-->
        <maven.javadoc.skip>true</maven.javadoc.skip>
    </properties>

    <modules>
        <module>yy-commons</module>
        <module>yy-commons-extend</module>
        <module>yy-core</module>
        <module>yy-core-jpa</module>
        <module>yy-web</module>
    </modules>

    <dependencyManagement>
        <dependencies>
            <!-- apache common -->
            <dependency>
                <groupId>commons-lang</groupId>
                <artifactId>commons-lang</artifactId>
                <version>${commons.lang.version}</version>
            </dependency>
            <dependency>
                <groupId>commons-collections</groupId>
                <artifactId>commons-collections</artifactId>
                <version>${commons.collections.version}</version>
            </dependency>
            <dependency>
                <groupId>commons-beanutils</groupId>
                <artifactId>commons-beanutils</artifactId>
                <version>${commons.beanutils.version}</version>
            </dependency>
            <dependency>
                <groupId>commons-codec</groupId>
                <artifactId>commons-codec</artifactId>
                <version>${commons.codec.version}</version>
            </dependency>

            <!-- logger -->
            <dependency>
                <groupId>org.slf4j</groupId>
                <artifactId>slf4j-api</artifactId>
                <version>${slf4j.version}</version>
                <scope>compile</scope>
            </dependency>

            <!-- dom4j -->
            <dependency>
                <groupId>dom4j</groupId>
                <artifactId>dom4j</artifactId>
                <version>${dom4j.version}</version>
            </dependency>
            <dependency>
                <groupId>jaxen</groupId>
                <artifactId>jaxen</artifactId>
                <version>${jaxen.version}</version>
            </dependency>

            <!-- poi -->
            <dependency>
                <groupId>org.apache.poi</groupId>
                <artifactId>poi</artifactId>
                <version>${poi.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.poi</groupId>
                <artifactId>poi-ooxml</artifactId>
                <version>${poi.version}</version>
            </dependency>

            <!-- http client -->
            <dependency>
                <groupId>org.apache.httpcomponents</groupId>
                <artifactId>httpclient</artifactId>
                <version>${httpclient.version}</version>
            </dependency>

            <!-- fastjson -->
            <dependency>
                <groupId>com.alibaba</groupId>
                <artifactId>fastjson</artifactId>
                <version>${fastjson.version}</version>
            </dependency>
            <dependency>
                <groupId>com.fasterxml.jackson.core</groupId>
                <artifactId>jackson-annotations</artifactId>
                <version>${jackson.version}</version>
            </dependency>

            <!-- spring jpa -->
            <dependency>
                <groupId>org.hibernate.javax.persistence</groupId>
                <artifactId>hibernate-jpa-2.1-api</artifactId>
                <version>${hibernate.jpa.version}</version>
            </dependency>
            <dependency>
                <groupId>org.hibernate</groupId>
                <artifactId>hibernate-core</artifactId>
                <version>${hibernate.version}</version>
            </dependency>

            <!--Swagger Restful UI 集成依赖-->
            <dependency>
                <groupId>io.springfox</groupId>
                <artifactId>springfox-swagger-ui</artifactId>
                <version>${swagger.version}</version>
            </dependency>
            <dependency>
                <groupId>io.springfox</groupId>
                <artifactId>springfox-swagger2</artifactId>
                <version>${swagger.version}</version>
            </dependency>
            <dependency>
                <groupId>io.swagger</groupId>
                <artifactId>swagger-annotations</artifactId>
                <version>${swagger.annotations.version}</version>
            </dependency>

            <!-- servlet -->
            <dependency>
                <groupId>javax.servlet</groupId>
                <artifactId>servlet-api</artifactId>
                <version>${servlet.version}</version>
                <scope>provided</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>

<!--    <profiles>-->
<!--        <profile>-->
<!--            <id>disable-javadoc-doclint</id>-->
<!--            <activation>-->
<!--                <jdk>[1.8,)</jdk>-->
<!--            </activation>-->
<!--            <properties>-->
<!--                <javadoc.opts>-Xdoclint:none</javadoc.opts>-->
<!--            </properties>-->
<!--        </profile>-->
<!--    </profiles>-->

    <build>
        <plugins>
<!--            把项目通过maven生产源码包和文档包并发布到自己的私服上，
                有两个maven插件可以做到这些工作，一个是maven-source-plugin，另一个是maven-javadoc-plugin-->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <configuration>
                    <source>${java.version}</source>
                    <target>${java.version}</target>
                    <encoding>${project.build.sourceEncoding}</encoding>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-javadoc-plugin</artifactId>
                <version>2.9.1</version>
                <configuration>
                    <aggregate>true</aggregate>
                </configuration>
                <executions>
                    <execution>
                        <id>attach-javadocs</id>
                        <goals>
                            <goal>jar</goal>
                        </goals>
<!--                        解决jdk1.8打包报错-->
<!--                        <configuration>-->
<!--                            <additionalparam>-Xdoclint:none</additionalparam>-->
<!--                        </configuration>-->
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <artifactId>maven-source-plugin</artifactId>
                <version>2.1</version>
                <configuration>
                    <attach>true</attach>
                    <encoding>${project.build.sourceEncoding}</encoding>
                </configuration>
                <executions>
                    <execution>
                        <phase>compile</phase>
                        <goals>
                            <goal>jar</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>

<!--    mvn deploy时把包推到的私服地址-->
    <distributionManagement>
        <repository>
            <id>nexus</id>
            <name>releases</name>
<!--            要去自己的私服查看url-->
            <url>http://182.92.98.133:8081/repository/maven-releases/</url>
        </repository>
        <snapshotRepository>
            <id>nexus</id>
            <name>snapshots</name>
            <!--            要去自己的私服查看url-->
            <url>http://182.92.98.133:8081/repository/maven-snapshots/</url>
        </snapshotRepository>
    </distributionManagement>


<!--    <distributionManagement>-->
<!--        <repository>-->
<!--            <id>tomcat</id>-->
<!--            <name>tomcat</name>-->
<!--            <url>http://192.168.205.11:8282/repository/releases/</url>-->
<!--        </repository>-->
<!--        <snapshotRepository>-->
<!--            <id>tomcat</id>-->
<!--            <name>tomcat</name>-->
<!--            <url>http://192.168.205.11:8282/repository/snapshots/</url>-->
<!--        </snapshotRepository>-->
<!--    </distributionManagement>-->
</project>